/*
 * generated by Xtext 2.15.0
 */
grammar InternalDomainmodel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.project.browserautomationdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.project.browserautomationdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.project.browserautomationdsl.services.DomainmodelGrammarAccess;

}

@parser::members {

 	private DomainmodelGrammarAccess grammarAccess;

    public InternalDomainmodelParser(TokenStream input, DomainmodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "PROGRAMME";
   	}

   	@Override
   	protected DomainmodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePROGRAMME
entryRulePROGRAMME returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPROGRAMMERule()); }
	iv_rulePROGRAMME=rulePROGRAMME
	{ $current=$iv_rulePROGRAMME.current; }
	EOF;

// Rule PROGRAMME
rulePROGRAMME returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPROGRAMMEAccess().getProceduresPROCEDUREParserRuleCall_0());
			}
			lv_procedures_0_0=rulePROCEDURE
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPROGRAMMERule());
				}
				add(
					$current,
					"procedures",
					lv_procedures_0_0,
					"org.xtext.project.browserautomationdsl.Domainmodel.PROCEDURE");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRulePROCEDURE
entryRulePROCEDURE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPROCEDURERule()); }
	iv_rulePROCEDURE=rulePROCEDURE
	{ $current=$iv_rulePROCEDURE.current; }
	EOF;

// Rule PROCEDURE
rulePROCEDURE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='procedure'
		{
			newLeafNode(otherlv_0, grammarAccess.getPROCEDUREAccess().getProcedureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_VARTYPE
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPROCEDUREAccess().getNameVARTYPETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPROCEDURERule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
				}
			)
		)
		(
			otherlv_2='with'
			{
				newLeafNode(otherlv_2, grammarAccess.getPROCEDUREAccess().getWithKeyword_2_0());
			}
			(
				(
					lv_param_3_0=RULE_VARTYPE
					{
						newLeafNode(lv_param_3_0, grammarAccess.getPROCEDUREAccess().getParamVARTYPETerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPROCEDURERule());
						}
						setWithLastConsumed(
							$current,
							"param",
							lv_param_3_0,
							"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
					}
				)
			)
			(
				(
					lv_params_4_0=RULE_VARTYPE
					{
						newLeafNode(lv_params_4_0, grammarAccess.getPROCEDUREAccess().getParamsVARTYPETerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPROCEDURERule());
						}
						addWithLastConsumed(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPROCEDUREAccess().getInstINSTRUCTIONParserRuleCall_3_0());
				}
				lv_inst_5_0=ruleINSTRUCTION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPROCEDURERule());
					}
					add(
						$current,
						"inst",
						lv_inst_5_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.INSTRUCTION");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleINSTRUCTION
entryRuleINSTRUCTION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getINSTRUCTIONRule()); }
	iv_ruleINSTRUCTION=ruleINSTRUCTION
	{ $current=$iv_ruleINSTRUCTION.current; }
	EOF;

// Rule INSTRUCTION
ruleINSTRUCTION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getOPENParserRuleCall_0());
		}
		this_OPEN_0=ruleOPEN
		{
			$current = $this_OPEN_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getCLICKParserRuleCall_1());
		}
		this_CLICK_1=ruleCLICK
		{
			$current = $this_CLICK_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getCHECKParserRuleCall_2());
		}
		this_CHECK_2=ruleCHECK
		{
			$current = $this_CHECK_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getUNCHECKParserRuleCall_3());
		}
		this_UNCHECK_3=ruleUNCHECK
		{
			$current = $this_UNCHECK_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getREADParserRuleCall_4());
		}
		this_READ_4=ruleREAD
		{
			$current = $this_READ_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getCOUNTParserRuleCall_5());
		}
		this_COUNT_5=ruleCOUNT
		{
			$current = $this_COUNT_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getVERIFYParserRuleCall_6());
		}
		this_VERIFY_6=ruleVERIFY
		{
			$current = $this_VERIFY_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getSELECTParserRuleCall_7());
		}
		this_SELECT_7=ruleSELECT
		{
			$current = $this_SELECT_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getGOTOParserRuleCall_8());
		}
		this_GOTO_8=ruleGOTO
		{
			$current = $this_GOTO_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getFILLParserRuleCall_9());
		}
		this_FILL_9=ruleFILL
		{
			$current = $this_FILL_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getINSTRUCTIONAccess().getPLAYParserRuleCall_10());
		}
		this_PLAY_10=rulePLAY
		{
			$current = $this_PLAY_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOPEN
entryRuleOPEN returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOPENRule()); }
	iv_ruleOPEN=ruleOPEN
	{ $current=$iv_ruleOPEN.current; }
	EOF;

// Rule OPEN
ruleOPEN returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='open'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getOPENAccess().getNameOpenKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOPENRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "open");
				}
			)
		)
		(
			(
				(
					lv_value_1_1='FIREFOX'
					{
						newLeafNode(lv_value_1_1, grammarAccess.getOPENAccess().getValueFIREFOXKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOPENRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_1, null);
					}
					    |
					lv_value_1_2='CHROME'
					{
						newLeafNode(lv_value_1_2, grammarAccess.getOPENAccess().getValueCHROMEKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOPENRule());
						}
						setWithLastConsumed($current, "value", lv_value_1_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleGOTO
entryRuleGOTO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGOTORule()); }
	iv_ruleGOTO=ruleGOTO
	{ $current=$iv_ruleGOTO.current; }
	EOF;

// Rule GOTO
ruleGOTO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='go to'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getGOTOAccess().getNameGoToKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGOTORule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "go to");
				}
			)
		)
		(
			otherlv_1='given'
			{
				newLeafNode(otherlv_1, grammarAccess.getGOTOAccess().getGivenKeyword_1());
			}
		)?
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getGOTOAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGOTORule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCLICK
entryRuleCLICK returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCLICKRule()); }
	iv_ruleCLICK=ruleCLICK
	{ $current=$iv_ruleCLICK.current; }
	EOF;

// Rule CLICK
ruleCLICK returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='click'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCLICKAccess().getNameClickKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCLICKRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "click");
				}
			)
		)
		otherlv_1='on'
		{
			newLeafNode(otherlv_1, grammarAccess.getCLICKAccess().getOnKeyword_1());
		}
		(
			(
				(
					lv_type_2_1='BUTTON'
					{
						newLeafNode(lv_type_2_1, grammarAccess.getCLICKAccess().getTypeBUTTONKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCLICKRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_1, null);
					}
					    |
					lv_type_2_2='LINK'
					{
						newLeafNode(lv_type_2_2, grammarAccess.getCLICKAccess().getTypeLINKKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCLICKRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_2, null);
					}
					    |
					lv_type_2_3='IMAGE'
					{
						newLeafNode(lv_type_2_3, grammarAccess.getCLICKAccess().getTypeIMAGEKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCLICKRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_3, null);
					}
					    |
					lv_type_2_4='TEXT'
					{
						newLeafNode(lv_type_2_4, grammarAccess.getCLICKAccess().getTypeTEXTKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCLICKRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_4, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCLICKAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_3_0());
				}
				lv_identifier_3_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCLICKRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_3_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFILL
entryRuleFILL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFILLRule()); }
	iv_ruleFILL=ruleFILL
	{ $current=$iv_ruleFILL.current; }
	EOF;

// Rule FILL
ruleFILL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='fill'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFILLAccess().getNameFillKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFILLRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "fill");
				}
			)
		)
		(
			(
				(
					lv_fieldType_1_1='TEXTFIELD'
					{
						newLeafNode(lv_fieldType_1_1, grammarAccess.getFILLAccess().getFieldTypeTEXTFIELDKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFILLRule());
						}
						setWithLastConsumed($current, "fieldType", lv_fieldType_1_1, null);
					}
					    |
					lv_fieldType_1_2='SEARCHFIELD'
					{
						newLeafNode(lv_fieldType_1_2, grammarAccess.getFILLAccess().getFieldTypeSEARCHFIELDKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFILLRule());
						}
						setWithLastConsumed($current, "fieldType", lv_fieldType_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFILLAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_2_0());
				}
				lv_identifier_2_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFILLRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_2_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getFILLAccess().getWithKeyword_3());
		}
		(
			(
				otherlv_4='saved'
				{
					newLeafNode(otherlv_4, grammarAccess.getFILLAccess().getSavedKeyword_4_0_0());
				}
				(
					(
						lv_var_5_0=RULE_VARTYPE
						{
							newLeafNode(lv_var_5_0, grammarAccess.getFILLAccess().getVarVARTYPETerminalRuleCall_4_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFILLRule());
							}
							setWithLastConsumed(
								$current,
								"var",
								lv_var_5_0,
								"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
						}
					)
				)
			)
			    |
			(
				(
					lv_value_6_0=RULE_STRING
					{
						newLeafNode(lv_value_6_0, grammarAccess.getFILLAccess().getValueSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFILLRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCHECK
entryRuleCHECK returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCHECKRule()); }
	iv_ruleCHECK=ruleCHECK
	{ $current=$iv_ruleCHECK.current; }
	EOF;

// Rule CHECK
ruleCHECK returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='check'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCHECKAccess().getNameCheckKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCHECKRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "check");
				}
			)
		)
		(
			(
				lv_all_1_0='all'
				{
					newLeafNode(lv_all_1_0, grammarAccess.getCHECKAccess().getAllAllKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCHECKRule());
					}
					setWithLastConsumed($current, "all", lv_all_1_0, "all");
				}
			)
		)?
		otherlv_2='CHECKBOX'
		{
			newLeafNode(otherlv_2, grammarAccess.getCHECKAccess().getCHECKBOXKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCHECKAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_3_0());
				}
				lv_identifier_3_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCHECKRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_3_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUNCHECK
entryRuleUNCHECK returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUNCHECKRule()); }
	iv_ruleUNCHECK=ruleUNCHECK
	{ $current=$iv_ruleUNCHECK.current; }
	EOF;

// Rule UNCHECK
ruleUNCHECK returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='uncheck'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getUNCHECKAccess().getNameUncheckKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUNCHECKRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "uncheck");
				}
			)
		)
		(
			(
				lv_all_1_0='all'
				{
					newLeafNode(lv_all_1_0, grammarAccess.getUNCHECKAccess().getAllAllKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUNCHECKRule());
					}
					setWithLastConsumed($current, "all", lv_all_1_0, "all");
				}
			)
		)?
		otherlv_2='CHECKBOX'
		{
			newLeafNode(otherlv_2, grammarAccess.getUNCHECKAccess().getCHECKBOXKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUNCHECKAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_3_0());
				}
				lv_identifier_3_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUNCHECKRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_3_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSELECT
entryRuleSELECT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSELECTRule()); }
	iv_ruleSELECT=ruleSELECT
	{ $current=$iv_ruleSELECT.current; }
	EOF;

// Rule SELECT
ruleSELECT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='select'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSELECTAccess().getNameSelectKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSELECTRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "select");
				}
			)
		)
		(
			(
				lv_elem_1_0=RULE_STRING
				{
					newLeafNode(lv_elem_1_0, grammarAccess.getSELECTAccess().getElemSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSELECTRule());
					}
					setWithLastConsumed(
						$current,
						"elem",
						lv_elem_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getSELECTAccess().getInKeyword_2());
		}
		otherlv_3='COMBOBOX'
		{
			newLeafNode(otherlv_3, grammarAccess.getSELECTAccess().getCOMBOBOXKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSELECTAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_4_0());
				}
				lv_identifier_4_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSELECTRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_4_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleREAD
entryRuleREAD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getREADRule()); }
	iv_ruleREAD=ruleREAD
	{ $current=$iv_ruleREAD.current; }
	EOF;

// Rule READ
ruleREAD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='read'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getREADAccess().getNameReadKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREADRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "read");
				}
			)
		)
		otherlv_1='url'
		{
			newLeafNode(otherlv_1, grammarAccess.getREADAccess().getUrlKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getREADAccess().getFromKeyword_2());
		}
		(
			otherlv_3='BUTTON'
			{
				newLeafNode(otherlv_3, grammarAccess.getREADAccess().getBUTTONKeyword_3_0());
			}
			    |
			otherlv_4='LINK'
			{
				newLeafNode(otherlv_4, grammarAccess.getREADAccess().getLINKKeyword_3_1());
			}
			    |
			otherlv_5='IMAGE'
			{
				newLeafNode(otherlv_5, grammarAccess.getREADAccess().getIMAGEKeyword_3_2());
			}
			    |
			otherlv_6='TEXT'
			{
				newLeafNode(otherlv_6, grammarAccess.getREADAccess().getTEXTKeyword_3_3());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getREADAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_4_0());
				}
				lv_identifier_7_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getREADRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_7_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getREADAccess().getSavePathSAVEVARParserRuleCall_5_0());
				}
				lv_savePath_8_0=ruleSAVEVAR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getREADRule());
					}
					set(
						$current,
						"savePath",
						lv_savePath_8_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.SAVEVAR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleELEMENTIDENTIFIER
entryRuleELEMENTIDENTIFIER returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getELEMENTIDENTIFIERRule()); }
	iv_ruleELEMENTIDENTIFIER=ruleELEMENTIDENTIFIER
	{ $current=$iv_ruleELEMENTIDENTIFIER.current; }
	EOF;

// Rule ELEMENTIDENTIFIER
ruleELEMENTIDENTIFIER returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='identified'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getELEMENTIDENTIFIERAccess().getNameIdentifiedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "identified");
				}
			)
		)
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getELEMENTIDENTIFIERAccess().getByKeyword_1());
		}
		(
			(
				(
					lv_type_2_1='LABEL'
					{
						newLeafNode(lv_type_2_1, grammarAccess.getELEMENTIDENTIFIERAccess().getTypeLABELKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_1, null);
					}
					    |
					lv_type_2_2='CLASS'
					{
						newLeafNode(lv_type_2_2, grammarAccess.getELEMENTIDENTIFIERAccess().getTypeCLASSKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_2, null);
					}
					    |
					lv_type_2_3='ID'
					{
						newLeafNode(lv_type_2_3, grammarAccess.getELEMENTIDENTIFIERAccess().getTypeIDKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_3, null);
					}
					    |
					lv_type_2_4='ALT'
					{
						newLeafNode(lv_type_2_4, grammarAccess.getELEMENTIDENTIFIERAccess().getTypeALTKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_4, null);
					}
				)
			)
		)
		(
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getELEMENTIDENTIFIERAccess().getValueSTRINGTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					(
						lv_info_4_0='given'
						{
							newLeafNode(lv_info_4_0, grammarAccess.getELEMENTIDENTIFIERAccess().getInfoGivenKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
							}
							setWithLastConsumed($current, "info", lv_info_4_0, "given");
						}
					)
				)
				(
					(
						lv_var_5_0=RULE_VARTYPE
						{
							newLeafNode(lv_var_5_0, grammarAccess.getELEMENTIDENTIFIERAccess().getVarVARTYPETerminalRuleCall_3_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getELEMENTIDENTIFIERRule());
							}
							setWithLastConsumed(
								$current,
								"var",
								lv_var_5_0,
								"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleVERIFY
entryRuleVERIFY returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVERIFYRule()); }
	iv_ruleVERIFY=ruleVERIFY
	{ $current=$iv_ruleVERIFY.current; }
	EOF;

// Rule VERIFY
ruleVERIFY returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVERIFYAccess().getVERIFY_CONTAINSParserRuleCall_0());
		}
		this_VERIFY_CONTAINS_0=ruleVERIFY_CONTAINS
		{
			$current = $this_VERIFY_CONTAINS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVERIFYAccess().getVERIFY_EQUALSParserRuleCall_1());
		}
		this_VERIFY_EQUALS_1=ruleVERIFY_EQUALS
		{
			$current = $this_VERIFY_EQUALS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVERIFY_CONTAINS
entryRuleVERIFY_CONTAINS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVERIFY_CONTAINSRule()); }
	iv_ruleVERIFY_CONTAINS=ruleVERIFY_CONTAINS
	{ $current=$iv_ruleVERIFY_CONTAINS.current; }
	EOF;

// Rule VERIFY_CONTAINS
ruleVERIFY_CONTAINS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='verify'
		{
			newLeafNode(otherlv_0, grammarAccess.getVERIFY_CONTAINSAccess().getVerifyKeyword_0());
		}
		otherlv_1='that'
		{
			newLeafNode(otherlv_1, grammarAccess.getVERIFY_CONTAINSAccess().getThatKeyword_1());
		}
		(
			(
				(
					lv_type_2_1='PAGE'
					{
						newLeafNode(lv_type_2_1, grammarAccess.getVERIFY_CONTAINSAccess().getTypePAGEKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVERIFY_CONTAINSRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_1, null);
					}
					    |
					lv_type_2_2='TEXT'
					{
						newLeafNode(lv_type_2_2, grammarAccess.getVERIFY_CONTAINSAccess().getTypeTEXTKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVERIFY_CONTAINSRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVERIFY_CONTAINSAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_3_0());
				}
				lv_identifier_3_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVERIFY_CONTAINSRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_3_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='contains'
		{
			newLeafNode(otherlv_4, grammarAccess.getVERIFY_CONTAINSAccess().getContainsKeyword_4());
		}
		(
			(
				(
					otherlv_5='LINK'
					{
						newLeafNode(otherlv_5, grammarAccess.getVERIFY_CONTAINSAccess().getLINKKeyword_5_0_0_0());
					}
					    |
					otherlv_6='IMAGE'
					{
						newLeafNode(otherlv_6, grammarAccess.getVERIFY_CONTAINSAccess().getIMAGEKeyword_5_0_0_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getVERIFY_CONTAINSAccess().getContainedIdentifierELEMENTIDENTIFIERParserRuleCall_5_0_1_0());
						}
						lv_containedIdentifier_7_0=ruleELEMENTIDENTIFIER
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVERIFY_CONTAINSRule());
							}
							set(
								$current,
								"containedIdentifier",
								lv_containedIdentifier_7_0,
								"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_value_8_0=RULE_STRING
						{
							newLeafNode(lv_value_8_0, grammarAccess.getVERIFY_CONTAINSAccess().getValueSTRINGTerminalRuleCall_5_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVERIFY_CONTAINSRule());
							}
							setWithLastConsumed(
								$current,
								"value",
								lv_value_8_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getVERIFY_CONTAINSAccess().getVariableREGISTERED_VALUEParserRuleCall_5_1_1_0());
						}
						lv_variable_9_0=ruleREGISTERED_VALUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVERIFY_CONTAINSRule());
							}
							set(
								$current,
								"variable",
								lv_variable_9_0,
								"org.xtext.project.browserautomationdsl.Domainmodel.REGISTERED_VALUE");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleVERIFY_EQUALS
entryRuleVERIFY_EQUALS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVERIFY_EQUALSRule()); }
	iv_ruleVERIFY_EQUALS=ruleVERIFY_EQUALS
	{ $current=$iv_ruleVERIFY_EQUALS.current; }
	EOF;

// Rule VERIFY_EQUALS
ruleVERIFY_EQUALS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='verify'
		{
			newLeafNode(otherlv_0, grammarAccess.getVERIFY_EQUALSAccess().getVerifyKeyword_0());
		}
		otherlv_1='that'
		{
			newLeafNode(otherlv_1, grammarAccess.getVERIFY_EQUALSAccess().getThatKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVERIFY_EQUALSAccess().getOperationCOUNTParserRuleCall_2_0());
				}
				lv_operation_2_0=ruleCOUNT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVERIFY_EQUALSRule());
					}
					set(
						$current,
						"operation",
						lv_operation_2_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.COUNT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='equals'
		{
			newLeafNode(otherlv_3, grammarAccess.getVERIFY_EQUALSAccess().getEqualsKeyword_3());
		}
		(
			(
				(
					lv_value_4_0=RULE_STRING
					{
						newLeafNode(lv_value_4_0, grammarAccess.getVERIFY_EQUALSAccess().getValueSTRINGTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVERIFY_EQUALSRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVERIFY_EQUALSAccess().getRegisteredValueREGISTERED_VALUEParserRuleCall_4_1_0());
					}
					lv_registeredValue_5_0=ruleREGISTERED_VALUE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVERIFY_EQUALSRule());
						}
						set(
							$current,
							"registeredValue",
							lv_registeredValue_5_0,
							"org.xtext.project.browserautomationdsl.Domainmodel.REGISTERED_VALUE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleREGISTERED_VALUE
entryRuleREGISTERED_VALUE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getREGISTERED_VALUERule()); }
	iv_ruleREGISTERED_VALUE=ruleREGISTERED_VALUE
	{ $current=$iv_ruleREGISTERED_VALUE.current; }
	EOF;

// Rule REGISTERED_VALUE
ruleREGISTERED_VALUE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='saved'
		{
			newLeafNode(otherlv_0, grammarAccess.getREGISTERED_VALUEAccess().getSavedKeyword_0());
		}
		(
			(
				lv_var_1_0=RULE_VARTYPE
				{
					newLeafNode(lv_var_1_0, grammarAccess.getREGISTERED_VALUEAccess().getVarVARTYPETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREGISTERED_VALUERule());
					}
					setWithLastConsumed(
						$current,
						"var",
						lv_var_1_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
				}
			)
		)
	)
;

// Entry rule entryRuleCOUNT
entryRuleCOUNT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCOUNTRule()); }
	iv_ruleCOUNT=ruleCOUNT
	{ $current=$iv_ruleCOUNT.current; }
	EOF;

// Rule COUNT
ruleCOUNT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='count'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCOUNTAccess().getNameCountKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOUNTRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "count");
				}
			)
		)
		otherlv_1='ELEMENT'
		{
			newLeafNode(otherlv_1, grammarAccess.getCOUNTAccess().getELEMENTKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCOUNTAccess().getIdentifierELEMENTIDENTIFIERParserRuleCall_2_0());
				}
				lv_identifier_2_0=ruleELEMENTIDENTIFIER
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCOUNTRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_2_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.ELEMENTIDENTIFIER");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCOUNTAccess().getSaveVariableSAVEVARParserRuleCall_3_0());
				}
				lv_saveVariable_3_0=ruleSAVEVAR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCOUNTRule());
					}
					set(
						$current,
						"saveVariable",
						lv_saveVariable_3_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.SAVEVAR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSAVEVAR
entryRuleSAVEVAR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSAVEVARRule()); }
	iv_ruleSAVEVAR=ruleSAVEVAR
	{ $current=$iv_ruleSAVEVAR.current; }
	EOF;

// Rule SAVEVAR
ruleSAVEVAR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='and'
		{
			newLeafNode(otherlv_0, grammarAccess.getSAVEVARAccess().getAndKeyword_0());
		}
		otherlv_1='save'
		{
			newLeafNode(otherlv_1, grammarAccess.getSAVEVARAccess().getSaveKeyword_1());
		}
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getSAVEVARAccess().getInKeyword_2());
		}
		(
			(
				lv_var_3_0=RULE_VARTYPE
				{
					newLeafNode(lv_var_3_0, grammarAccess.getSAVEVARAccess().getVarVARTYPETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSAVEVARRule());
					}
					setWithLastConsumed(
						$current,
						"var",
						lv_var_3_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
				}
			)
		)
	)
;

// Entry rule entryRulePLAY
entryRulePLAY returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPLAYRule()); }
	iv_rulePLAY=rulePLAY
	{ $current=$iv_rulePLAY.current; }
	EOF;

// Rule PLAY
rulePLAY returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='play'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPLAYAccess().getNamePlayKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPLAYRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "play");
				}
			)
		)
		otherlv_1='procedure'
		{
			newLeafNode(otherlv_1, grammarAccess.getPLAYAccess().getProcedureKeyword_1());
		}
		(
			(
				lv_preocedure_2_0=RULE_VARTYPE
				{
					newLeafNode(lv_preocedure_2_0, grammarAccess.getPLAYAccess().getPreocedureVARTYPETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPLAYRule());
					}
					setWithLastConsumed(
						$current,
						"preocedure",
						lv_preocedure_2_0,
						"org.xtext.project.browserautomationdsl.Domainmodel.VARTYPE");
				}
			)
		)
		(
			(
				lv_params_3_0=RULE_STRING
				{
					newLeafNode(lv_params_3_0, grammarAccess.getPLAYAccess().getParamsSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPLAYRule());
					}
					addWithLastConsumed(
						$current,
						"params",
						lv_params_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)*
	)
;

RULE_VARTYPE : ('A'..'Z'|'a'..'z'|RULE_INT|'_'|'-')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
