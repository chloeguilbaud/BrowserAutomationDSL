/*
 * generated by Xtext 2.15.0
 */
package org.xtext.project.browserautomationdsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.project.browserautomationdsl.ide.contentassist.antlr.internal.InternalDomainmodelParser;
import org.xtext.project.browserautomationdsl.services.DomainmodelGrammarAccess;

public class DomainmodelParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DomainmodelGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DomainmodelGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getINSTRUCTIONAccess().getAlternatives(), "rule__INSTRUCTION__Alternatives");
			builder.put(grammarAccess.getOPENAccess().getValueAlternatives_1_0(), "rule__OPEN__ValueAlternatives_1_0");
			builder.put(grammarAccess.getCLICKAccess().getTypeAlternatives_2_0(), "rule__CLICK__TypeAlternatives_2_0");
			builder.put(grammarAccess.getFILLAccess().getFieldTypeAlternatives_1_0(), "rule__FILL__FieldTypeAlternatives_1_0");
			builder.put(grammarAccess.getFILLAccess().getAlternatives_4(), "rule__FILL__Alternatives_4");
			builder.put(grammarAccess.getREADAccess().getAlternatives_3(), "rule__READ__Alternatives_3");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getTypeAlternatives_2_0(), "rule__ELEMENTIDENTIFIER__TypeAlternatives_2_0");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getAlternatives_3(), "rule__ELEMENTIDENTIFIER__Alternatives_3");
			builder.put(grammarAccess.getVERIFYAccess().getAlternatives(), "rule__VERIFY__Alternatives");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getTypeAlternatives_2_0(), "rule__VERIFY_CONTAINS__TypeAlternatives_2_0");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getAlternatives_5(), "rule__VERIFY_CONTAINS__Alternatives_5");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getAlternatives_5_0_0(), "rule__VERIFY_CONTAINS__Alternatives_5_0_0");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getAlternatives_5_1(), "rule__VERIFY_CONTAINS__Alternatives_5_1");
			builder.put(grammarAccess.getVERIFY_EQUALSAccess().getAlternatives_4(), "rule__VERIFY_EQUALS__Alternatives_4");
			builder.put(grammarAccess.getPROCEDUREAccess().getGroup(), "rule__PROCEDURE__Group__0");
			builder.put(grammarAccess.getPROCEDUREAccess().getGroup_2(), "rule__PROCEDURE__Group_2__0");
			builder.put(grammarAccess.getOPENAccess().getGroup(), "rule__OPEN__Group__0");
			builder.put(grammarAccess.getGOTOAccess().getGroup(), "rule__GOTO__Group__0");
			builder.put(grammarAccess.getCLICKAccess().getGroup(), "rule__CLICK__Group__0");
			builder.put(grammarAccess.getFILLAccess().getGroup(), "rule__FILL__Group__0");
			builder.put(grammarAccess.getFILLAccess().getGroup_4_0(), "rule__FILL__Group_4_0__0");
			builder.put(grammarAccess.getCHECKAccess().getGroup(), "rule__CHECK__Group__0");
			builder.put(grammarAccess.getUNCHECKAccess().getGroup(), "rule__UNCHECK__Group__0");
			builder.put(grammarAccess.getSELECTAccess().getGroup(), "rule__SELECT__Group__0");
			builder.put(grammarAccess.getREADAccess().getGroup(), "rule__READ__Group__0");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getGroup(), "rule__ELEMENTIDENTIFIER__Group__0");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getGroup_3_1(), "rule__ELEMENTIDENTIFIER__Group_3_1__0");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getGroup(), "rule__VERIFY_CONTAINS__Group__0");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getGroup_5_0(), "rule__VERIFY_CONTAINS__Group_5_0__0");
			builder.put(grammarAccess.getVERIFY_EQUALSAccess().getGroup(), "rule__VERIFY_EQUALS__Group__0");
			builder.put(grammarAccess.getREGISTERED_VALUEAccess().getGroup(), "rule__REGISTERED_VALUE__Group__0");
			builder.put(grammarAccess.getCOUNTAccess().getGroup(), "rule__COUNT__Group__0");
			builder.put(grammarAccess.getSAVEVARAccess().getGroup(), "rule__SAVEVAR__Group__0");
			builder.put(grammarAccess.getPLAYAccess().getGroup(), "rule__PLAY__Group__0");
			builder.put(grammarAccess.getPROGRAMMEAccess().getProceduresAssignment(), "rule__PROGRAMME__ProceduresAssignment");
			builder.put(grammarAccess.getPROCEDUREAccess().getNameAssignment_1(), "rule__PROCEDURE__NameAssignment_1");
			builder.put(grammarAccess.getPROCEDUREAccess().getParamAssignment_2_1(), "rule__PROCEDURE__ParamAssignment_2_1");
			builder.put(grammarAccess.getPROCEDUREAccess().getParamsAssignment_2_2(), "rule__PROCEDURE__ParamsAssignment_2_2");
			builder.put(grammarAccess.getPROCEDUREAccess().getInstAssignment_3(), "rule__PROCEDURE__InstAssignment_3");
			builder.put(grammarAccess.getOPENAccess().getNameAssignment_0(), "rule__OPEN__NameAssignment_0");
			builder.put(grammarAccess.getOPENAccess().getValueAssignment_1(), "rule__OPEN__ValueAssignment_1");
			builder.put(grammarAccess.getGOTOAccess().getNameAssignment_0(), "rule__GOTO__NameAssignment_0");
			builder.put(grammarAccess.getGOTOAccess().getValueAssignment_2(), "rule__GOTO__ValueAssignment_2");
			builder.put(grammarAccess.getCLICKAccess().getNameAssignment_0(), "rule__CLICK__NameAssignment_0");
			builder.put(grammarAccess.getCLICKAccess().getTypeAssignment_2(), "rule__CLICK__TypeAssignment_2");
			builder.put(grammarAccess.getCLICKAccess().getIdentifierAssignment_3(), "rule__CLICK__IdentifierAssignment_3");
			builder.put(grammarAccess.getFILLAccess().getNameAssignment_0(), "rule__FILL__NameAssignment_0");
			builder.put(grammarAccess.getFILLAccess().getFieldTypeAssignment_1(), "rule__FILL__FieldTypeAssignment_1");
			builder.put(grammarAccess.getFILLAccess().getIdentifierAssignment_2(), "rule__FILL__IdentifierAssignment_2");
			builder.put(grammarAccess.getFILLAccess().getVarAssignment_4_0_1(), "rule__FILL__VarAssignment_4_0_1");
			builder.put(grammarAccess.getFILLAccess().getValueAssignment_4_1(), "rule__FILL__ValueAssignment_4_1");
			builder.put(grammarAccess.getCHECKAccess().getNameAssignment_0(), "rule__CHECK__NameAssignment_0");
			builder.put(grammarAccess.getCHECKAccess().getAllAssignment_1(), "rule__CHECK__AllAssignment_1");
			builder.put(grammarAccess.getCHECKAccess().getIdentifierAssignment_3(), "rule__CHECK__IdentifierAssignment_3");
			builder.put(grammarAccess.getUNCHECKAccess().getNameAssignment_0(), "rule__UNCHECK__NameAssignment_0");
			builder.put(grammarAccess.getUNCHECKAccess().getAllAssignment_1(), "rule__UNCHECK__AllAssignment_1");
			builder.put(grammarAccess.getUNCHECKAccess().getIdentifierAssignment_3(), "rule__UNCHECK__IdentifierAssignment_3");
			builder.put(grammarAccess.getSELECTAccess().getNameAssignment_0(), "rule__SELECT__NameAssignment_0");
			builder.put(grammarAccess.getSELECTAccess().getElemAssignment_1(), "rule__SELECT__ElemAssignment_1");
			builder.put(grammarAccess.getSELECTAccess().getIdentifierAssignment_4(), "rule__SELECT__IdentifierAssignment_4");
			builder.put(grammarAccess.getREADAccess().getNameAssignment_0(), "rule__READ__NameAssignment_0");
			builder.put(grammarAccess.getREADAccess().getIdentifierAssignment_4(), "rule__READ__IdentifierAssignment_4");
			builder.put(grammarAccess.getREADAccess().getSavePathAssignment_5(), "rule__READ__SavePathAssignment_5");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getNameAssignment_0(), "rule__ELEMENTIDENTIFIER__NameAssignment_0");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getTypeAssignment_2(), "rule__ELEMENTIDENTIFIER__TypeAssignment_2");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getValueAssignment_3_0(), "rule__ELEMENTIDENTIFIER__ValueAssignment_3_0");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getInfoAssignment_3_1_0(), "rule__ELEMENTIDENTIFIER__InfoAssignment_3_1_0");
			builder.put(grammarAccess.getELEMENTIDENTIFIERAccess().getVarAssignment_3_1_1(), "rule__ELEMENTIDENTIFIER__VarAssignment_3_1_1");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getTypeAssignment_2(), "rule__VERIFY_CONTAINS__TypeAssignment_2");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getIdentifierAssignment_3(), "rule__VERIFY_CONTAINS__IdentifierAssignment_3");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getContainedIdentifierAssignment_5_0_1(), "rule__VERIFY_CONTAINS__ContainedIdentifierAssignment_5_0_1");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getValueAssignment_5_1_0(), "rule__VERIFY_CONTAINS__ValueAssignment_5_1_0");
			builder.put(grammarAccess.getVERIFY_CONTAINSAccess().getVariableAssignment_5_1_1(), "rule__VERIFY_CONTAINS__VariableAssignment_5_1_1");
			builder.put(grammarAccess.getVERIFY_EQUALSAccess().getOperationAssignment_2(), "rule__VERIFY_EQUALS__OperationAssignment_2");
			builder.put(grammarAccess.getVERIFY_EQUALSAccess().getValueAssignment_4_0(), "rule__VERIFY_EQUALS__ValueAssignment_4_0");
			builder.put(grammarAccess.getVERIFY_EQUALSAccess().getRegisteredValueAssignment_4_1(), "rule__VERIFY_EQUALS__RegisteredValueAssignment_4_1");
			builder.put(grammarAccess.getREGISTERED_VALUEAccess().getVarAssignment_1(), "rule__REGISTERED_VALUE__VarAssignment_1");
			builder.put(grammarAccess.getCOUNTAccess().getNameAssignment_0(), "rule__COUNT__NameAssignment_0");
			builder.put(grammarAccess.getCOUNTAccess().getIdentifierAssignment_2(), "rule__COUNT__IdentifierAssignment_2");
			builder.put(grammarAccess.getCOUNTAccess().getSaveVariableAssignment_3(), "rule__COUNT__SaveVariableAssignment_3");
			builder.put(grammarAccess.getSAVEVARAccess().getVarAssignment_3(), "rule__SAVEVAR__VarAssignment_3");
			builder.put(grammarAccess.getPLAYAccess().getNameAssignment_0(), "rule__PLAY__NameAssignment_0");
			builder.put(grammarAccess.getPLAYAccess().getPreocedureAssignment_2(), "rule__PLAY__PreocedureAssignment_2");
			builder.put(grammarAccess.getPLAYAccess().getParamsAssignment_3(), "rule__PLAY__ParamsAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DomainmodelGrammarAccess grammarAccess;

	@Override
	protected InternalDomainmodelParser createParser() {
		InternalDomainmodelParser result = new InternalDomainmodelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DomainmodelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DomainmodelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
